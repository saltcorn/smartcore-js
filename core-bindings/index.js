// prettier-ignore
/* eslint-disable */
// @ts-nocheck
/* auto-generated by NAPI-RS */

const { createRequire } = require('node:module')
require = createRequire(__filename)

const { readFileSync } = require('node:fs')
let nativeBinding = null
const loadErrors = []

const isMusl = () => {
  let musl = false
  if (process.platform === 'linux') {
    musl = isMuslFromFilesystem()
    if (musl === null) {
      musl = isMuslFromReport()
    }
    if (musl === null) {
      musl = isMuslFromChildProcess()
    }
  }
  return musl
}

const isFileMusl = (f) => f.includes('libc.musl-') || f.includes('ld-musl-')

const isMuslFromFilesystem = () => {
  try {
    return readFileSync('/usr/bin/ldd', 'utf-8').includes('musl')
  } catch {
    return null
  }
}

const isMuslFromReport = () => {
  let report = null
  if (typeof process.report?.getReport === 'function') {
    process.report.excludeNetwork = true
    report = process.report.getReport()
  }
  if (!report) {
    return null
  }
  if (report.header && report.header.glibcVersionRuntime) {
    return false
  }
  if (Array.isArray(report.sharedObjects)) {
    if (report.sharedObjects.some(isFileMusl)) {
      return true
    }
  }
  return false
}

const isMuslFromChildProcess = () => {
  try {
    return require('child_process').execSync('ldd --version', { encoding: 'utf8' }).includes('musl')
  } catch (e) {
    // If we reach this case, we don't know if the system is musl or not, so is better to just fallback to false
    return false
  }
}

function requireNative() {
  if (process.env.NAPI_RS_NATIVE_LIBRARY_PATH) {
    try {
      return require(process.env.NAPI_RS_NATIVE_LIBRARY_PATH);
    } catch (err) {
      loadErrors.push(err)
    }
  } else if (process.platform === 'android') {
    if (process.arch === 'arm64') {
      try {
        return require('./smartcore-js.android-arm64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-android-arm64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-android-arm64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'arm') {
      try {
        return require('./smartcore-js.android-arm-eabi.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-android-arm-eabi')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-android-arm-eabi/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else {
      loadErrors.push(new Error(`Unsupported architecture on Android ${process.arch}`))
    }
  } else if (process.platform === 'win32') {
    if (process.arch === 'x64') {
      try {
        return require('./smartcore-js.win32-x64-msvc.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-win32-x64-msvc')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-win32-x64-msvc/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'ia32') {
      try {
        return require('./smartcore-js.win32-ia32-msvc.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-win32-ia32-msvc')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-win32-ia32-msvc/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'arm64') {
      try {
        return require('./smartcore-js.win32-arm64-msvc.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-win32-arm64-msvc')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-win32-arm64-msvc/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else {
      loadErrors.push(new Error(`Unsupported architecture on Windows: ${process.arch}`))
    }
  } else if (process.platform === 'darwin') {
    try {
      return require('./smartcore-js.darwin-universal.node')
    } catch (e) {
      loadErrors.push(e)
    }
    try {
      const binding = require('@saltcorn/smartcore-js-darwin-universal')
      const bindingPackageVersion = require('@saltcorn/smartcore-js-darwin-universal/package.json').version
      if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
        throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
      }
      return binding
    } catch (e) {
      loadErrors.push(e)
    }
    if (process.arch === 'x64') {
      try {
        return require('./smartcore-js.darwin-x64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-darwin-x64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-darwin-x64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'arm64') {
      try {
        return require('./smartcore-js.darwin-arm64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-darwin-arm64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-darwin-arm64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else {
      loadErrors.push(new Error(`Unsupported architecture on macOS: ${process.arch}`))
    }
  } else if (process.platform === 'freebsd') {
    if (process.arch === 'x64') {
      try {
        return require('./smartcore-js.freebsd-x64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-freebsd-x64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-freebsd-x64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'arm64') {
      try {
        return require('./smartcore-js.freebsd-arm64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-freebsd-arm64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-freebsd-arm64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else {
      loadErrors.push(new Error(`Unsupported architecture on FreeBSD: ${process.arch}`))
    }
  } else if (process.platform === 'linux') {
    if (process.arch === 'x64') {
      if (isMusl()) {
        try {
          return require('./smartcore-js.linux-x64-musl.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-x64-musl')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-x64-musl/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      } else {
        try {
          return require('./smartcore-js.linux-x64-gnu.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-x64-gnu')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-x64-gnu/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      }
    } else if (process.arch === 'arm64') {
      if (isMusl()) {
        try {
          return require('./smartcore-js.linux-arm64-musl.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-arm64-musl')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-arm64-musl/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      } else {
        try {
          return require('./smartcore-js.linux-arm64-gnu.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-arm64-gnu')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-arm64-gnu/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      }
    } else if (process.arch === 'arm') {
      if (isMusl()) {
        try {
          return require('./smartcore-js.linux-arm-musleabihf.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-arm-musleabihf')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-arm-musleabihf/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      } else {
        try {
          return require('./smartcore-js.linux-arm-gnueabihf.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-arm-gnueabihf')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-arm-gnueabihf/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      }
    } else if (process.arch === 'loong64') {
      if (isMusl()) {
        try {
          return require('./smartcore-js.linux-loong64-musl.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-loong64-musl')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-loong64-musl/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      } else {
        try {
          return require('./smartcore-js.linux-loong64-gnu.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-loong64-gnu')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-loong64-gnu/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      }
    } else if (process.arch === 'riscv64') {
      if (isMusl()) {
        try {
          return require('./smartcore-js.linux-riscv64-musl.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-riscv64-musl')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-riscv64-musl/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      } else {
        try {
          return require('./smartcore-js.linux-riscv64-gnu.node')
        } catch (e) {
          loadErrors.push(e)
        }
        try {
          const binding = require('@saltcorn/smartcore-js-linux-riscv64-gnu')
          const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-riscv64-gnu/package.json').version
          if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
            throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
          }
          return binding
        } catch (e) {
          loadErrors.push(e)
        }
      }
    } else if (process.arch === 'ppc64') {
      try {
        return require('./smartcore-js.linux-ppc64-gnu.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-linux-ppc64-gnu')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-ppc64-gnu/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 's390x') {
      try {
        return require('./smartcore-js.linux-s390x-gnu.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-linux-s390x-gnu')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-linux-s390x-gnu/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else {
      loadErrors.push(new Error(`Unsupported architecture on Linux: ${process.arch}`))
    }
  } else if (process.platform === 'openharmony') {
    if (process.arch === 'arm64') {
      try {
        return require('./smartcore-js.openharmony-arm64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-openharmony-arm64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-openharmony-arm64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'x64') {
      try {
        return require('./smartcore-js.openharmony-x64.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-openharmony-x64')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-openharmony-x64/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else if (process.arch === 'arm') {
      try {
        return require('./smartcore-js.openharmony-arm.node')
      } catch (e) {
        loadErrors.push(e)
      }
      try {
        const binding = require('@saltcorn/smartcore-js-openharmony-arm')
        const bindingPackageVersion = require('@saltcorn/smartcore-js-openharmony-arm/package.json').version
        if (bindingPackageVersion !== '0.1.4' && process.env.NAPI_RS_ENFORCE_VERSION_CHECK && process.env.NAPI_RS_ENFORCE_VERSION_CHECK !== '0') {
          throw new Error(`Native binding package version mismatch, expected 0.1.4 but got ${bindingPackageVersion}. You can reinstall dependencies to fix this issue.`)
        }
        return binding
      } catch (e) {
        loadErrors.push(e)
      }
    } else {
      loadErrors.push(new Error(`Unsupported architecture on OpenHarmony: ${process.arch}`))
    }
  } else {
    loadErrors.push(new Error(`Unsupported OS: ${process.platform}, architecture: ${process.arch}`))
  }
}

nativeBinding = requireNative()

if (!nativeBinding || process.env.NAPI_RS_FORCE_WASI) {
  let wasiBinding = null
  let wasiBindingError = null
  try {
    wasiBinding = require('./smartcore-js.wasi.cjs')
    nativeBinding = wasiBinding
  } catch (err) {
    if (process.env.NAPI_RS_FORCE_WASI) {
      wasiBindingError = err
    }
  }
  if (!nativeBinding) {
    try {
      wasiBinding = require('@saltcorn/smartcore-js-wasm32-wasi')
      nativeBinding = wasiBinding
    } catch (err) {
      if (process.env.NAPI_RS_FORCE_WASI) {
        wasiBindingError.cause = err
        loadErrors.push(err)
      }
    }
  }
  if (process.env.NAPI_RS_FORCE_WASI === 'error' && !wasiBinding) {
    const error = new Error('WASI binding not found and NAPI_RS_FORCE_WASI is set to error')
    error.cause = wasiBindingError
    throw error
  }
}

if (!nativeBinding) {
  if (loadErrors.length > 0) {
    throw new Error(
      `Cannot find native binding. ` +
        `npm has a bug related to optional dependencies (https://github.com/npm/cli/issues/4828). ` +
        'Please try `npm i` again after removing both package-lock.json and node_modules directory.',
      {
        cause: loadErrors.reduce((err, cur) => {
          cur.cause = err
          return cur
        }),
      },
    )
  }
  throw new Error(`Failed to load native binding`)
}

module.exports = nativeBinding
module.exports.AccuracyF64 = nativeBinding.AccuracyF64
module.exports.Accuracyf64 = nativeBinding.Accuracyf64
module.exports.AccuracyI64 = nativeBinding.AccuracyI64
module.exports.Accuracyi64 = nativeBinding.Accuracyi64
module.exports.AccuracyU64 = nativeBinding.AccuracyU64
module.exports.Accuracyu64 = nativeBinding.Accuracyu64
module.exports.AUCF64 = nativeBinding.AUCF64
module.exports.AUCf64 = nativeBinding.AUCf64
module.exports.BernoulliNBF64BigU64 = nativeBinding.BernoulliNBF64BigU64
module.exports.BernoulliNBF64Parameters = nativeBinding.BernoulliNBF64Parameters
module.exports.Boston = nativeBinding.Boston
module.exports.BreastCancer = nativeBinding.BreastCancer
module.exports.CategoricalNBBigU64 = nativeBinding.CategoricalNBBigU64
module.exports.CategoricalNBParameters = nativeBinding.CategoricalNBParameters
module.exports.CrossValidationResult = nativeBinding.CrossValidationResult
module.exports.dataset = nativeBinding.dataset
module.exports.Dataset = nativeBinding.Dataset
module.exports.DatasetF64F64 = nativeBinding.DatasetF64F64
module.exports.DatasetF64F64JsVecRef = nativeBinding.DatasetF64F64JsVecRef
module.exports.DatasetF64I64 = nativeBinding.DatasetF64I64
module.exports.DatasetF64I64JsVecRef = nativeBinding.DatasetF64I64JsVecRef
module.exports.DatasetF64U64 = nativeBinding.DatasetF64U64
module.exports.DBSCANF64EuclidianF64Parameters = nativeBinding.DBSCANF64EuclidianF64Parameters
module.exports.DBSCANF64F64EuclidianF64 = nativeBinding.DBSCANF64F64EuclidianF64
module.exports.DBSCANF64F64HammingF64 = nativeBinding.DBSCANF64F64HammingF64
module.exports.DBSCANF64F64MahalanobisF64 = nativeBinding.DBSCANF64F64MahalanobisF64
module.exports.DBSCANF64F64ManhattanF64 = nativeBinding.DBSCANF64F64ManhattanF64
module.exports.DBSCANF64F64MinkowskiF64 = nativeBinding.DBSCANF64F64MinkowskiF64
module.exports.DBSCANF64HammingF64Parameters = nativeBinding.DBSCANF64HammingF64Parameters
module.exports.DBSCANF64MahalanobisF64Parameters = nativeBinding.DBSCANF64MahalanobisF64Parameters
module.exports.DBSCANF64ManhattanF64Parameters = nativeBinding.DBSCANF64ManhattanF64Parameters
module.exports.DBSCANF64MinkowskiF64Parameters = nativeBinding.DBSCANF64MinkowskiF64Parameters
module.exports.DecisionTreeClassifierI64I64 = nativeBinding.DecisionTreeClassifierI64I64
module.exports.DecisionTreeClassifierParameters = nativeBinding.DecisionTreeClassifierParameters
module.exports.DecisionTreeRegressorI64I64 = nativeBinding.DecisionTreeRegressorI64I64
module.exports.DecisionTreeRegressorParameters = nativeBinding.DecisionTreeRegressorParameters
module.exports.DenseMatrixF64 = nativeBinding.DenseMatrixF64
module.exports.DenseMatrixI64 = nativeBinding.DenseMatrixI64
module.exports.DenseMatrixU64 = nativeBinding.DenseMatrixU64
module.exports.Diabetes = nativeBinding.Diabetes
module.exports.Digits = nativeBinding.Digits
module.exports.ElasticNetF64BigI64 = nativeBinding.ElasticNetF64BigI64
module.exports.ElasticNetF64BigU64 = nativeBinding.ElasticNetF64BigU64
module.exports.ElasticNetF64F64 = nativeBinding.ElasticNetF64F64
module.exports.ElasticNetF64I64 = nativeBinding.ElasticNetF64I64
module.exports.ElasticNetParameters = nativeBinding.ElasticNetParameters
module.exports.EuclidianF64 = nativeBinding.EuclidianF64
module.exports.EuclidianI64 = nativeBinding.EuclidianI64
module.exports.EuclidianU64 = nativeBinding.EuclidianU64
module.exports.ExtraTreesRegressorF64BigI64 = nativeBinding.ExtraTreesRegressorF64BigI64
module.exports.ExtraTreesRegressorF64BigU64 = nativeBinding.ExtraTreesRegressorF64BigU64
module.exports.ExtraTreesRegressorF64F64 = nativeBinding.ExtraTreesRegressorF64F64
module.exports.ExtraTreesRegressorF64I64 = nativeBinding.ExtraTreesRegressorF64I64
module.exports.ExtraTreesRegressorParameters = nativeBinding.ExtraTreesRegressorParameters
module.exports.F1F64 = nativeBinding.F1F64
module.exports.F1f64 = nativeBinding.F1f64
module.exports.GaussianNBF64BigU64 = nativeBinding.GaussianNBF64BigU64
module.exports.GaussianNBParameters = nativeBinding.GaussianNBParameters
module.exports.Generator = nativeBinding.Generator
module.exports.HammingF64 = nativeBinding.HammingF64
module.exports.HammingI64 = nativeBinding.HammingI64
module.exports.HammingU64 = nativeBinding.HammingU64
module.exports.HCVScoreI64 = nativeBinding.HCVScoreI64
module.exports.HCVScorei64 = nativeBinding.HCVScorei64
module.exports.HCVScoreU64 = nativeBinding.HCVScoreU64
module.exports.HCVScoreu64 = nativeBinding.HCVScoreu64
module.exports.Iris = nativeBinding.Iris
module.exports.JsBoxedArrayF32Ref = nativeBinding.JsBoxedArrayF32Ref
module.exports.JsBoxedArrayF64Ref = nativeBinding.JsBoxedArrayF64Ref
module.exports.JsDenseMatrixF64Ref = nativeBinding.JsDenseMatrixF64Ref
module.exports.JsVecF64Ref = nativeBinding.JsVecF64Ref
module.exports.JsVecI64Ref = nativeBinding.JsVecI64Ref
module.exports.Kernels = nativeBinding.Kernels
module.exports.KFold = nativeBinding.KFold
module.exports.KMeansF64BigI64 = nativeBinding.KMeansF64BigI64
module.exports.KMeansF64F64 = nativeBinding.KMeansF64F64
module.exports.KMeansF64I64 = nativeBinding.KMeansF64I64
module.exports.KMeansParameters = nativeBinding.KMeansParameters
module.exports.KNNClassifierF64BigI64EuclidianF64 = nativeBinding.KNNClassifierF64BigI64EuclidianF64
module.exports.KNNClassifierF64BigI64HammingF64 = nativeBinding.KNNClassifierF64BigI64HammingF64
module.exports.KNNClassifierF64BigI64MahalanobisF64 = nativeBinding.KNNClassifierF64BigI64MahalanobisF64
module.exports.KNNClassifierF64BigI64ManhattanF64 = nativeBinding.KNNClassifierF64BigI64ManhattanF64
module.exports.KNNClassifierF64BigI64MinkowskiF64 = nativeBinding.KNNClassifierF64BigI64MinkowskiF64
module.exports.KNNClassifierF64BigU64EuclidianF64 = nativeBinding.KNNClassifierF64BigU64EuclidianF64
module.exports.KNNClassifierF64BigU64HammingF64 = nativeBinding.KNNClassifierF64BigU64HammingF64
module.exports.KNNClassifierF64BigU64MahalanobisF64 = nativeBinding.KNNClassifierF64BigU64MahalanobisF64
module.exports.KNNClassifierF64BigU64ManhattanF64 = nativeBinding.KNNClassifierF64BigU64ManhattanF64
module.exports.KNNClassifierF64BigU64MinkowskiF64 = nativeBinding.KNNClassifierF64BigU64MinkowskiF64
module.exports.KNNClassifierF64EuclidianF64Parameters = nativeBinding.KNNClassifierF64EuclidianF64Parameters
module.exports.KNNClassifierF64HammingF64Parameters = nativeBinding.KNNClassifierF64HammingF64Parameters
module.exports.KNNClassifierF64I64EuclidianF64 = nativeBinding.KNNClassifierF64I64EuclidianF64
module.exports.KNNClassifierF64I64HammingF64 = nativeBinding.KNNClassifierF64I64HammingF64
module.exports.KNNClassifierF64I64MahalanobisF64 = nativeBinding.KNNClassifierF64I64MahalanobisF64
module.exports.KNNClassifierF64I64ManhattanF64 = nativeBinding.KNNClassifierF64I64ManhattanF64
module.exports.KNNClassifierF64I64MinkowskiF64 = nativeBinding.KNNClassifierF64I64MinkowskiF64
module.exports.KNNClassifierF64MahalanobisF64Parameters = nativeBinding.KNNClassifierF64MahalanobisF64Parameters
module.exports.KNNClassifierF64ManhattanF64Parameters = nativeBinding.KNNClassifierF64ManhattanF64Parameters
module.exports.KNNClassifierF64MinkowskiF64Parameters = nativeBinding.KNNClassifierF64MinkowskiF64Parameters
module.exports.KNNRegressorF64BigI64EuclidianF64 = nativeBinding.KNNRegressorF64BigI64EuclidianF64
module.exports.KNNRegressorF64BigI64HammingF64 = nativeBinding.KNNRegressorF64BigI64HammingF64
module.exports.KNNRegressorF64BigI64MahalanobisF64 = nativeBinding.KNNRegressorF64BigI64MahalanobisF64
module.exports.KNNRegressorF64BigI64ManhattanF64 = nativeBinding.KNNRegressorF64BigI64ManhattanF64
module.exports.KNNRegressorF64BigI64MinkowskiF64 = nativeBinding.KNNRegressorF64BigI64MinkowskiF64
module.exports.KNNRegressorF64BigU64EuclidianF64 = nativeBinding.KNNRegressorF64BigU64EuclidianF64
module.exports.KNNRegressorF64BigU64HammingF64 = nativeBinding.KNNRegressorF64BigU64HammingF64
module.exports.KNNRegressorF64BigU64MahalanobisF64 = nativeBinding.KNNRegressorF64BigU64MahalanobisF64
module.exports.KNNRegressorF64BigU64ManhattanF64 = nativeBinding.KNNRegressorF64BigU64ManhattanF64
module.exports.KNNRegressorF64BigU64MinkowskiF64 = nativeBinding.KNNRegressorF64BigU64MinkowskiF64
module.exports.KNNRegressorF64EuclidianF64Parameters = nativeBinding.KNNRegressorF64EuclidianF64Parameters
module.exports.KNNRegressorF64F64EuclidianF64 = nativeBinding.KNNRegressorF64F64EuclidianF64
module.exports.KNNRegressorF64F64HammingF64 = nativeBinding.KNNRegressorF64F64HammingF64
module.exports.KNNRegressorF64F64MahalanobisF64 = nativeBinding.KNNRegressorF64F64MahalanobisF64
module.exports.KNNRegressorF64F64ManhattanF64 = nativeBinding.KNNRegressorF64F64ManhattanF64
module.exports.KNNRegressorF64F64MinkowskiF64 = nativeBinding.KNNRegressorF64F64MinkowskiF64
module.exports.KNNRegressorF64HammingF64Parameters = nativeBinding.KNNRegressorF64HammingF64Parameters
module.exports.KNNRegressorF64I64EuclidianF64 = nativeBinding.KNNRegressorF64I64EuclidianF64
module.exports.KNNRegressorF64I64HammingF64 = nativeBinding.KNNRegressorF64I64HammingF64
module.exports.KNNRegressorF64I64MahalanobisF64 = nativeBinding.KNNRegressorF64I64MahalanobisF64
module.exports.KNNRegressorF64I64ManhattanF64 = nativeBinding.KNNRegressorF64I64ManhattanF64
module.exports.KNNRegressorF64I64MinkowskiF64 = nativeBinding.KNNRegressorF64I64MinkowskiF64
module.exports.KNNRegressorF64MahalanobisF64Parameters = nativeBinding.KNNRegressorF64MahalanobisF64Parameters
module.exports.KNNRegressorF64ManhattanF64Parameters = nativeBinding.KNNRegressorF64ManhattanF64Parameters
module.exports.KNNRegressorF64MinkowskiF64Parameters = nativeBinding.KNNRegressorF64MinkowskiF64Parameters
module.exports.LassoF64BigI64 = nativeBinding.LassoF64BigI64
module.exports.LassoF64BigU64 = nativeBinding.LassoF64BigU64
module.exports.LassoF64F64 = nativeBinding.LassoF64F64
module.exports.LassoF64I64 = nativeBinding.LassoF64I64
module.exports.LassoParameters = nativeBinding.LassoParameters
module.exports.LinearRegressionF64BigI64 = nativeBinding.LinearRegressionF64BigI64
module.exports.LinearRegressionF64BigU64 = nativeBinding.LinearRegressionF64BigU64
module.exports.LinearRegressionF64F64 = nativeBinding.LinearRegressionF64F64
module.exports.LinearRegressionF64I64 = nativeBinding.LinearRegressionF64I64
module.exports.LinearRegressionParameters = nativeBinding.LinearRegressionParameters
module.exports.LogisticRegressionF64BigI64 = nativeBinding.LogisticRegressionF64BigI64
module.exports.LogisticRegressionF64BigU64 = nativeBinding.LogisticRegressionF64BigU64
module.exports.LogisticRegressionF64I64 = nativeBinding.LogisticRegressionF64I64
module.exports.LogisticRegressionParametersF64 = nativeBinding.LogisticRegressionParametersF64
module.exports.MahalanobisF64 = nativeBinding.MahalanobisF64
module.exports.ManhattanF64 = nativeBinding.ManhattanF64
module.exports.ManhattanI64 = nativeBinding.ManhattanI64
module.exports.ManhattanU64 = nativeBinding.ManhattanU64
module.exports.MeanAbsoluteErrorF64 = nativeBinding.MeanAbsoluteErrorF64
module.exports.MeanAbsoluteErrorf64 = nativeBinding.MeanAbsoluteErrorf64
module.exports.MeanSquareErrorF64 = nativeBinding.MeanSquareErrorF64
module.exports.MeanSquareErrorf64 = nativeBinding.MeanSquareErrorf64
module.exports.MinkowskiF64 = nativeBinding.MinkowskiF64
module.exports.MinkowskiI64 = nativeBinding.MinkowskiI64
module.exports.MinkowskiU64 = nativeBinding.MinkowskiU64
module.exports.MultinomialNBParameters = nativeBinding.MultinomialNBParameters
module.exports.MultinomialNBU64BigU64 = nativeBinding.MultinomialNBU64BigU64
module.exports.OneHotEncoderF64 = nativeBinding.OneHotEncoderF64
module.exports.OneHotEncoderParameters = nativeBinding.OneHotEncoderParameters
module.exports.PCAF64 = nativeBinding.PCAF64
module.exports.PCAParameters = nativeBinding.PCAParameters
module.exports.PrecisionF64 = nativeBinding.PrecisionF64
module.exports.Precisionf64 = nativeBinding.Precisionf64
module.exports.R2F64 = nativeBinding.R2F64
module.exports.R2f64 = nativeBinding.R2f64
module.exports.R2I64 = nativeBinding.R2I64
module.exports.R2i64 = nativeBinding.R2i64
module.exports.R2U64 = nativeBinding.R2U64
module.exports.R2u64 = nativeBinding.R2u64
module.exports.RandomForestClassifierF64BigI64 = nativeBinding.RandomForestClassifierF64BigI64
module.exports.RandomForestClassifierF64BigU64 = nativeBinding.RandomForestClassifierF64BigU64
module.exports.RandomForestClassifierF64I64 = nativeBinding.RandomForestClassifierF64I64
module.exports.RandomForestClassifierParameters = nativeBinding.RandomForestClassifierParameters
module.exports.RandomForestRegressorF64BigI64 = nativeBinding.RandomForestRegressorF64BigI64
module.exports.RandomForestRegressorF64BigU64 = nativeBinding.RandomForestRegressorF64BigU64
module.exports.RandomForestRegressorF64F64 = nativeBinding.RandomForestRegressorF64F64
module.exports.RandomForestRegressorF64I64 = nativeBinding.RandomForestRegressorF64I64
module.exports.RandomForestRegressorParameters = nativeBinding.RandomForestRegressorParameters
module.exports.RecallF64 = nativeBinding.RecallF64
module.exports.Recallf64 = nativeBinding.Recallf64
module.exports.RidgeRegressionF64BigI64 = nativeBinding.RidgeRegressionF64BigI64
module.exports.RidgeRegressionF64BigU64 = nativeBinding.RidgeRegressionF64BigU64
module.exports.RidgeRegressionF64F64 = nativeBinding.RidgeRegressionF64F64
module.exports.RidgeRegressionF64I64 = nativeBinding.RidgeRegressionF64I64
module.exports.RidgeRegressionF64Parameters = nativeBinding.RidgeRegressionF64Parameters
module.exports.StandardScalerF64 = nativeBinding.StandardScalerF64
module.exports.StandardScalerParameters = nativeBinding.StandardScalerParameters
module.exports.SVCF64I64 = nativeBinding.SVCF64I64
module.exports.SVCParametersF64I64 = nativeBinding.SVCParametersF64I64
module.exports.SVDF64 = nativeBinding.SVDF64
module.exports.SVDF64DenseMatrixF64 = nativeBinding.SVDF64DenseMatrixF64
module.exports.SVDParameters = nativeBinding.SVDParameters
module.exports.SVRF64 = nativeBinding.SVRF64
module.exports.SVRParametersF64 = nativeBinding.SVRParametersF64
module.exports.VecF64 = nativeBinding.VecF64
module.exports.VecI64 = nativeBinding.VecI64
module.exports.crossValidateElasticNetF64F64 = nativeBinding.crossValidateElasticNetF64F64
module.exports.crossValidateElasticNetF64I64 = nativeBinding.crossValidateElasticNetF64I64
module.exports.crossValidateLogisticRegressionF64I64 = nativeBinding.crossValidateLogisticRegressionF64I64
module.exports.KNNAlgorithmName = nativeBinding.KNNAlgorithmName
module.exports.KNNWeightFunction = nativeBinding.KNNWeightFunction
module.exports.LinearRegressionSolverName = nativeBinding.LinearRegressionSolverName
module.exports.LogisticRegressionSolverName = nativeBinding.LogisticRegressionSolverName
module.exports.RidgeRegressionSolverName = nativeBinding.RidgeRegressionSolverName
module.exports.SplitCriterion = nativeBinding.SplitCriterion
module.exports.trainTestSplitF64BigI64 = nativeBinding.trainTestSplitF64BigI64
module.exports.trainTestSplitF64BigU64 = nativeBinding.trainTestSplitF64BigU64
module.exports.trainTestSplitF64F64 = nativeBinding.trainTestSplitF64F64
module.exports.trainTestSplitF64I64 = nativeBinding.trainTestSplitF64I64
