import { type DenseMatrixRs } from '../../linalg/index.js';
import { EuclidianU32, EuclidianF32, EuclidianF64, EuclidianI32, EuclidianI64, EuclidianU16, EuclidianU8, EuclidianU64, HammingU8, HammingU16, HammingI32, MahalanobisF32, MahalanobisF64, ManhattanF32, ManhattanF64, ManhattanI32, ManhattanU32, ManhattanI64, ManhattanU64, MinkowskiF32, MinkowskiF64, MinkowskiI32, MinkowskiI64, DBSCANF32I32EuclidianF32, DBSCANF32I32MahalanobisF32, DBSCANF32I32ManhattanF32, DBSCANF32I32MinkowskiF32, DBSCANF64I32EuclidianF64, DBSCANF64I32MahalanobisF64, DBSCANF64I32ManhattanF64, DBSCANF64I32MinkowskiF64, DBSCANI32I32EuclidianI32, DBSCANI32I32HammingI32, DBSCANI32I32ManhattanI32, DBSCANI32I32MinkowskiI32, DBSCANI64I32EuclidianI64, DBSCANI64I32ManhattanI64, DBSCANI64I32MinkowskiI64, DBSCANU16I32EuclidianU16, DBSCANU16I32HammingU16, DBSCANU32I32EuclidianU32, DBSCANU32I32ManhattanU32, DBSCANU64I32EuclidianU64, DBSCANU64I32ManhattanU64, DBSCANU8I32EuclidianU8, DBSCANU8I32HammingU8, DBSCANF32EuclidianF32Parameters, DBSCANF32MahalanobisF32Parameters, DBSCANF32ManhattanF32Parameters, DBSCANF32MinkowskiF32Parameters, DBSCANF64EuclidianF64Parameters, DBSCANF64MahalanobisF64Parameters, DBSCANF64ManhattanF64Parameters, DBSCANF64MinkowskiF64Parameters, DBSCANI32EuclidianI32Parameters, DBSCANI32HammingI32Parameters, DBSCANI32ManhattanI32Parameters, DBSCANI32MinkowskiI32Parameters, DBSCANI64EuclidianI64Parameters, DBSCANI64ManhattanI64Parameters, DBSCANI64MinkowskiI64Parameters, DBSCANU16EuclidianU16Parameters, DBSCANU16HammingU16Parameters, DBSCANU32EuclidianU32Parameters, DBSCANU32ManhattanU32Parameters, DBSCANU64EuclidianU64Parameters, DBSCANU64ManhattanU64Parameters, DBSCANU8EuclidianU8Parameters, DBSCANU8HammingU8Parameters, type KNNAlgorithmName, DenseMatrixF32, DenseMatrixF64 } from '../../core-bindings/index.js';
type DistanceRs = EuclidianF32 | EuclidianF64 | EuclidianU32 | EuclidianI32 | EuclidianI64 | EuclidianU16 | EuclidianU8 | EuclidianU64 | HammingU8 | HammingU16 | HammingI32 | MahalanobisF32 | MahalanobisF64 | ManhattanF32 | ManhattanF64 | ManhattanI32 | ManhattanU32 | ManhattanI64 | ManhattanU64 | MinkowskiF32 | MinkowskiF64 | MinkowskiI32 | MinkowskiI64;
type DistanceKey = 'EuclidianF32' | 'EuclidianF64' | 'EuclidianI32' | 'EuclidianU32' | 'EuclidianI64' | 'EuclidianU16' | 'EuclidianU8' | 'EuclidianU64' | 'HammingU8' | 'HammingU16' | 'HammingI32' | 'MahalanobisF32' | 'MahalanobisF64' | 'ManhattanF32' | 'ManhattanF64' | 'ManhattanI32' | 'ManhattanU32' | 'ManhattanI64' | 'ManhattanU64' | 'MinkowskiF32' | 'MinkowskiF64' | 'MinkowskiI32' | 'MinkowskiI64';
type DBSCANParametersRs = DBSCANF32EuclidianF32Parameters | DBSCANF32MahalanobisF32Parameters | DBSCANF32ManhattanF32Parameters | DBSCANF32MinkowskiF32Parameters | DBSCANF64EuclidianF64Parameters | DBSCANF64MahalanobisF64Parameters | DBSCANF64ManhattanF64Parameters | DBSCANF64MinkowskiF64Parameters | DBSCANI32EuclidianI32Parameters | DBSCANI32HammingI32Parameters | DBSCANI32ManhattanI32Parameters | DBSCANI32MinkowskiI32Parameters | DBSCANI64EuclidianI64Parameters | DBSCANI64ManhattanI64Parameters | DBSCANI64MinkowskiI64Parameters | DBSCANU16EuclidianU16Parameters | DBSCANU16HammingU16Parameters | DBSCANU32EuclidianU32Parameters | DBSCANU32ManhattanU32Parameters | DBSCANU64EuclidianU64Parameters | DBSCANU64ManhattanU64Parameters | DBSCANU8EuclidianU8Parameters | DBSCANU8HammingU8Parameters;
type DBSCANRs = DBSCANF32I32EuclidianF32 | DBSCANF32I32MahalanobisF32 | DBSCANF32I32ManhattanF32 | DBSCANF32I32MinkowskiF32 | DBSCANF64I32EuclidianF64 | DBSCANF64I32MahalanobisF64 | DBSCANF64I32ManhattanF64 | DBSCANF64I32MinkowskiF64 | DBSCANI32I32EuclidianI32 | DBSCANI32I32HammingI32 | DBSCANI32I32ManhattanI32 | DBSCANI32I32MinkowskiI32 | DBSCANI64I32EuclidianI64 | DBSCANI64I32ManhattanI64 | DBSCANI64I32MinkowskiI64 | DBSCANU16I32EuclidianU16 | DBSCANU16I32HammingU16 | DBSCANU32I32EuclidianU32 | DBSCANU32I32ManhattanU32 | DBSCANU64I32EuclidianU64 | DBSCANU64I32ManhattanU64 | DBSCANU8I32EuclidianU8 | DBSCANU8I32HammingU8;
interface EstimatorClass {
    fit(matrix: DenseMatrixRs, params: DBSCANParametersRs): DBSCANRs;
    deserialize(data: Buffer): DBSCANRs;
}
declare const estimatorClasses: Record<DistanceKey, EstimatorClass>;
interface IDBSCANParameters {
    minSamples?: number;
    algorithm?: KNNAlgorithmName;
    eps?: number;
    data?: DenseMatrixF32 | DenseMatrixF64;
    p?: number;
    distance?: DistanceKey;
}
declare function getParametersInstance(params: IDBSCANParameters): DBSCANParametersRs;
export { estimatorClasses, getParametersInstance, type DistanceKey, type DistanceRs, type EstimatorClass, type DBSCANParametersRs, type DBSCANRs, type IDBSCANParameters, };
